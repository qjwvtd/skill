import React, { Fragment, useRef, useState, useEffect } from 'react';
import { Row, Col, Button, Modal, Upload, message } from 'antd';
import Cropper from 'react-cropper';
import { observer } from 'mobx-react';
import user from '@/common/store/user';

import { dataURLtoFile, getBase64Image } from '@/common/utils';

import { uploadAvaterToOssAction, updateUserAvater } from '@/common/api/user';

/**必须引入插件自己的cropper.css样式文件**/

const avtar = require('@/static/images/portrait_default.png');

const CropperModal = observer(({ visible, callback }) => {
    const [avtarSrc, setAvtarSrc] = useState(null);
    //裁剪后的图片
    const [cropperedImg, setCropperedImg] = useState(null);
    const cropperRef = useRef();
    //限制类型为图片文件和文件大小
    function beforeUpload(file) {
        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/gif';
        if (!isJpgOrPng) {
            message.error('只能上传JPG/PNG/gif 文件!');
            return;
        }
        const isLt2M = file.size / 1024 / 1024 < 2;
        if (!isLt2M) {
            message.error('图片大小必须小于2MB!');
            return;
        }
        const reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = e => {
            const imageUrl = e.target.result;
            setAvtarSrc(imageUrl);
        };
        return false;//isJpgOrPng && isLt2M;
    }
    //裁剪图片
    function cropImage() {
        if (cropperRef.current.getCroppedCanvas() === 'null') {
            return false;
        }
        //裁剪后的图片
        const cimg = cropperRef.current.getCroppedCanvas().toDataURL();
        setCropperedImg(cimg);
    }
    //上传
    function uploadUserAvatar() {
        const avatarFormData = dataURLtoFile(cropperedImg, 'user_avatar_t_' + new Date().getTime());
        //上传阿里OSS
        uploadAvaterToOssAction(avatarFormData).then((res) => {
            console.log('上传阿里OSS', res);
            if (res.code === 200) {
                //更新到内部服务端
                updateUserAvater({ portrait: res.data }).then((response) => {
                    console.log('更新到内部服务端', response);
                    if (response.code === 200) {
                        message.success('头像更新上传成功!');
                        user.initUser();
                    }
                });
            }
        });
    }
    useEffect(() => {
        getBase64Image(avtarSrc, (dataurl) => {
            setAvtarSrc(dataurl);
            setCropperedImg(dataurl);
        });
    }, [avtarSrc]);
    return (
        <Modal
            title="更改头像"
            width={"600px"}
            visible={visible}
            okButtonProps={{ disabled: !cropperedImg }}
            okText={"上传"}
            onOk={() => { callback(); uploadUserAvatar(); }}
            onCancel={() => callback()}
        >
            <Row className="ui-updateHeadAvtar-modal">
                <Col span={14}>
                    <div className="ui-cropper-box" style={{ border: '1px solid #f5f5f5' }}>
                        <Cropper
                            src={avtarSrc}
                            ref={cropperRef}
                            className="user-avtar-cropper"
                            viewMode={1}
                            zoomable={false}
                            aspectRatio={1}
                            crossOrigin={''}
                            guides={false}
                            crop={cropImage}
                        />
                    </div>
                    <Upload
                        name="avatar"
                        accept="image/png, image/jpeg, image/gif, image/jpg"
                        showUploadList={false}
                        beforeUpload={beforeUpload}
                    >
                        <a className="headAvtar-upload-btn">
                            <span><i className="iconfont">&#xe627;</i>重新上传</span>
                        </a>
                    </Upload>
                </Col>
                <Col span={10}>
                    <div className="cropper-preview text-center">
                        <div className="avtar-cropper-preview">
                            <img src={cropperedImg} />
                        </div>
                        <a style={{ color: "#409eff" }}>预览</a>
                    </div>
                </Col>
            </Row>
        </Modal >
    );
});

export default function UpdateUserAvater() {
    const [cropperVisible, setCropperVisible] = useState(false);

    //打开裁剪模态
    function openCropperModal() {
        setCropperVisible(true);
    }
    //关闭裁剪模态
    function closeCropperModal() {
        // console.log(bool);
        setCropperVisible(false);
    }
    return (
        <Fragment>
            <Row className="ui-userinfo-sections ui-userinfo-updateAvtar">
                <img src={user.data.portrait || avtar} />
                <Button onClick={() => openCropperModal()}>更改头像</Button>
            </Row>
            <CropperModal visible={cropperVisible} callback={closeCropperModal} />
        </Fragment>
    );
}
