#配置全局用户
git config --global user.name yourName
git config --global user.email yourEmail
git config --list // 查看配置信息
--------------------------
#配置当前项目用户
git config user.name yourName
git config user.email yourEmail
git config --list // 查看配置信息
--------------------------
#创建本地分支
git branch 本地分支名
--------------------------
#切换到本地分支
git checkout 本地分支名
--------------------------
#查看所有本地和远程分支
git branch -a
--------------------------
#关联远程分支
git remote add origin 远程分支名
-------------------------------
#在本地目录初始好git后<生成.git文件后>,第一次拉取远程仓库的代码要执行下面的代码
git pull origin master<更换你要拉取的远程分支名> --allow-unrelated-histories
----------------------------------
# 推送本地分支到远程分支
git push origin 本地分支名:远程分支名
------------------------------------------
#取消对文件的修改。还原到最近的版本，废弃本地做的修改。
git checkout -- <file>
--------------------------------------------
#取消已经暂存的文件。即，撤销先前"git add"的操作
git reset HEAD <file>...
--------------------------------------------------------
#修改最后一次提交。用于修改上一次的提交信息，或漏提交文件等情况。
git commit --amend
---------------------------------------------------------------
#回退所有内容到上一个版本
git reset HEAD^
-----------------------------------------------------
#回退1.txt这个文件的版本到上一个版本  
git reset HEAD^ 1.txt
--------------------------------------
#向前回退到第3个版本  
git reset –soft HEAD~3  
---------------------------------------
#将本地的状态回退到和远程的一样  
git reset –hard origin/master  
-----------------------------------
#回退到某个版本  
git reset 057d  
-----------------------------------------------------------
#回退到上一次提交的状态，按照某一次的commit完全反向的进行一次commit.(代码回滚到上个版本，并提交git)
git revert HEAD
--------------------------------------------------------
#删除一个远程分支
git push origin --delete 远程分支名
-----------------------------------
#删除一个本地分支
git branch --delete 本地分支名
----------------------------------
#远程库名变更,本地重新关联
git remote rm origin
git remote add origin 新的地址
